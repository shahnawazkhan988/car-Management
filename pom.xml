<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.cars</groupId>
	<artifactId>cars</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>cars</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		 <sonar.organization>najeebkhan96</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
  		<sonar.coverage.exclusions>
  			**/CarsApplication.*,
  		</sonar.coverage.exclusions>
  		<sonar.exclusions>			
			**/CarEntity.java*,
			**/CarRequestModel.java*
		</sonar.exclusions>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.4.2.Final</version>
		</dependency>
		
		
		
		
		
	</dependencies>

	<build>
	
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
				<excludes>
					<exclude>**/CarEntity.*</exclude>
					<exclude>**/CarsApplication.*</exclude>
					<exclude>**/CarRequestModel.*</exclude>
				</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				</plugin>
				<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<jacocoReports>
						<jacocoReport>${project.build.directory}/jacoco-ut/jacoco.xml</jacocoReport>
						<jacocoReport>${project.build.directory}/jacoco-it/jacoco.xml</jacocoReport>
					</jacocoReports>
					<failOnServiceError>false</failOnServiceError>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.2.3</version>
					</dependency>
				</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.5.0.1254</version>
				</plugin>
				<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<source>11</source>
					<target>11</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.4.2.Final</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<includes>
						<include>**/*IT.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
					</additionalClasspathElements>
					<parallel>none</parallel>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        
		      </plugin>
			 <plugin>
				<groupId>io.fabric8</groupId>
			 	<artifactId>docker-maven-plugin</artifactId>
			 	<version>0.27.2</version>
			 	<configuration>
			 		<images>
			 			<image>
			 				<name>mysql</name>
			 				<run>
			 					<ports>
			 						<port>3338:3306</port>
			 					</ports>
			 				</run>
			 			</image>
			 		</images>
			 	</configuration>
			 	<executions>
			 		<execution>
			 			<id>docker:start</id>
			 			<phase>pre-integration-test</phase>
			 			<goals>
			 				<goal>start</goal>
			 			</goals>
			 		</execution>
			 		<execution>
			 			<id>docker:stop</id>
			 			<phase>post-integration-test</phase>
			 			<goals>
			 				<goal>stop</goal>
			 			</goals>
			 		</execution>
			 	</executions>
			</plugin> 
				<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.9</version>
				<executions>
					<execution>
						<id>pit-report</id>
						<phase>test</phase>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.12</version>
					</dependency>

				</dependencies>
				<configuration>
					<verbose>true</verbose>
					<targetClasses>
						<param>com.cars.cars.services.*</param>
						<param>com.cars.cars.controllers.*</param>
						<param>com.cars.cars.mapper.*</param>
					</targetClasses>
					<excludedTestClasses>
						<param>com.cars.cars.**.*IT</param>
						<param>com.cars.cars.controllers.**.*IT</param>
					</excludedTestClasses>
					<targetTests>
						<param>com.cars.cars.service.*</param>
						<param>com.cars.cars.controllers.*</param>
						<param>com.cars.cars.mapper.*</param>
					</targetTests>	
					<mutators>
						<mutator>DEFAULTS</mutator>
					</mutators>
					<mutationThreshold>80</mutationThreshold>
					<outputFormats>
						<outputFormat>XML</outputFormat>
						<outputFormat>HTML</outputFormat>
					</outputFormats>
				</configuration>
			</plugin>
			
		</plugins>
		</build>
	
	<profiles>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>            
          </plugin>
        </plugins>
      </build>
    </profile>
    </profiles>
</project>
